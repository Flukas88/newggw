// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ggw.proto

package ggwpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WheaterRequest struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Degrees              string   `protobuf:"bytes,2,opt,name=degrees,proto3" json:"degrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WheaterRequest) Reset()         { *m = WheaterRequest{} }
func (m *WheaterRequest) String() string { return proto.CompactTextString(m) }
func (*WheaterRequest) ProtoMessage()    {}
func (*WheaterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a225d695ed36f634, []int{0}
}

func (m *WheaterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WheaterRequest.Unmarshal(m, b)
}
func (m *WheaterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WheaterRequest.Marshal(b, m, deterministic)
}
func (m *WheaterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WheaterRequest.Merge(m, src)
}
func (m *WheaterRequest) XXX_Size() int {
	return xxx_messageInfo_WheaterRequest.Size(m)
}
func (m *WheaterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WheaterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WheaterRequest proto.InternalMessageInfo

func (m *WheaterRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *WheaterRequest) GetDegrees() string {
	if m != nil {
		return m.Degrees
	}
	return ""
}

type WheaterResponse struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Temp                 string   `protobuf:"bytes,2,opt,name=temp,proto3" json:"temp,omitempty"`
	Degrees              string   `protobuf:"bytes,3,opt,name=degrees,proto3" json:"degrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WheaterResponse) Reset()         { *m = WheaterResponse{} }
func (m *WheaterResponse) String() string { return proto.CompactTextString(m) }
func (*WheaterResponse) ProtoMessage()    {}
func (*WheaterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a225d695ed36f634, []int{1}
}

func (m *WheaterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WheaterResponse.Unmarshal(m, b)
}
func (m *WheaterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WheaterResponse.Marshal(b, m, deterministic)
}
func (m *WheaterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WheaterResponse.Merge(m, src)
}
func (m *WheaterResponse) XXX_Size() int {
	return xxx_messageInfo_WheaterResponse.Size(m)
}
func (m *WheaterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WheaterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WheaterResponse proto.InternalMessageInfo

func (m *WheaterResponse) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *WheaterResponse) GetTemp() string {
	if m != nil {
		return m.Temp
	}
	return ""
}

func (m *WheaterResponse) GetDegrees() string {
	if m != nil {
		return m.Degrees
	}
	return ""
}

func init() {
	proto.RegisterType((*WheaterRequest)(nil), "ggw.WheaterRequest")
	proto.RegisterType((*WheaterResponse)(nil), "ggw.WheaterResponse")
}

func init() { proto.RegisterFile("ggw.proto", fileDescriptor_a225d695ed36f634) }

var fileDescriptor_a225d695ed36f634 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4f, 0x2f, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4f, 0x2f, 0x57, 0xb2, 0xe3, 0xe2, 0x0b, 0xcf,
	0x48, 0x4d, 0x2c, 0x49, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62,
	0x49, 0xce, 0x2c, 0xa9, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x24, 0xb8,
	0xd8, 0x53, 0x52, 0xd3, 0x8b, 0x52, 0x53, 0x8b, 0x25, 0x98, 0xc0, 0xc2, 0x30, 0xae, 0x52, 0x30,
	0x17, 0x3f, 0x5c, 0x7f, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x56, 0x03, 0x84, 0xb8, 0x58, 0x4a,
	0x52, 0x73, 0x0b, 0xa0, 0xba, 0xc1, 0x6c, 0x64, 0x43, 0x99, 0x51, 0x0c, 0x35, 0xb2, 0xe4, 0x62,
	0x76, 0x4f, 0x2f, 0x17, 0x32, 0xe2, 0x62, 0xf6, 0xcb, 0x2f, 0x17, 0x12, 0xd6, 0x03, 0xb9, 0x19,
	0xd5, 0x95, 0x52, 0x22, 0xa8, 0x82, 0x10, 0xab, 0x95, 0x18, 0x9c, 0xd8, 0xa3, 0x58, 0xd3, 0xd3,
	0xcb, 0x0b, 0x92, 0x92, 0xd8, 0xc0, 0x9e, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x7b,
	0x08, 0xeb, 0xf1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GgwClient is the client API for Ggw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GgwClient interface {
	Now(ctx context.Context, in *WheaterRequest, opts ...grpc.CallOption) (*WheaterResponse, error)
}

type ggwClient struct {
	cc grpc.ClientConnInterface
}

func NewGgwClient(cc grpc.ClientConnInterface) GgwClient {
	return &ggwClient{cc}
}

func (c *ggwClient) Now(ctx context.Context, in *WheaterRequest, opts ...grpc.CallOption) (*WheaterResponse, error) {
	out := new(WheaterResponse)
	err := c.cc.Invoke(ctx, "/ggw.Ggw/Now", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GgwServer is the server API for Ggw service.
type GgwServer interface {
	Now(context.Context, *WheaterRequest) (*WheaterResponse, error)
}

// UnimplementedGgwServer can be embedded to have forward compatible implementations.
type UnimplementedGgwServer struct {
}

func (*UnimplementedGgwServer) Now(ctx context.Context, req *WheaterRequest) (*WheaterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Now not implemented")
}

func RegisterGgwServer(s *grpc.Server, srv GgwServer) {
	s.RegisterService(&_Ggw_serviceDesc, srv)
}

func _Ggw_Now_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WheaterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GgwServer).Now(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggw.Ggw/Now",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GgwServer).Now(ctx, req.(*WheaterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ggw_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ggw.Ggw",
	HandlerType: (*GgwServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Now",
			Handler:    _Ggw_Now_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ggw.proto",
}
